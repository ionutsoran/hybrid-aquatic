//file:noinspection ALL

plugins {
    id "fabric-loom" version "1.6-SNAPSHOT"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm"
}

version = mod_version
group = maven_group

base {
    archivesName = archives_base_name
}

repositories {
    maven {
        name = "Terraformers"
        url  = "https://maven.terraformersmc.com/releases/"
    }

    maven {
        name = "Jitpack"
        url  = "https://jitpack.io/"
    }

    maven {
        name = "Geckolib"
        url  = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }

    maven {
        name = "JamiesWhiteShirt"
        url  = "https://maven.jamieswhiteshirt.com/libs-release/"
    }

    maven {
        name = "Modrinth"
        url  = "https://api.modrinth.com/maven/"
    }

    maven {
        name = "Debug Utils (GitLab)"
        url  = "https://gitlab.com/api/v4/projects/21830712/packages/maven/"
    }

    maven {
        name = "Minecraft Forge"
        url  = "https://maven.minecraftforge.net/"
    }
}

fabricApi {
    configureDataGeneration {
        outputDirectory = file("src/generated/resources")
    }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$minecraft_version+build.$yarn_build:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modImplementation "net.fabricmc:fabric-language-kotlin:$fabric_kotlin_version+kotlin.$kotlin_version"

    modImplementation "software.bernie.geckolib:geckolib-fabric-$geckolib_version"
    modImplementation "com.terraformersmc:modmenu:$mod_menu_version"

    modRuntimeOnly "io.github.flemmli97:debugutils:$minecraft_version-$debug_utils_version-fabric"
    modRuntimeOnly "maven.modrinth:carpet:$carpet_version"

}

loom {
    splitEnvironmentSourceSets()

    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")

    mods {
        mod_id {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

processResources {
    inputs.property "version", version

    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

kotlin {
    jvmToolchain(17)
}

jar {
    from("LICENSE", "LICENSE_ASSETS")
}
